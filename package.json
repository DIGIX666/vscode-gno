{
  "name": "vscode-gno",
  "displayName": "Gno",
  "version": "0.1.0",
  "preview": false,
  "publisher": "gnoland",
  "description": "Gno language support for Visual Studio Code",
  "author": {
    "name": "kazai777"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Formatters"
  ],
  "engines": {
    "vscode": "^1.74.0"
  },
  "main": "./out/extension.js",
  "activationEvents": [
    "workspaceContains:*.gno",
    "workspaceContains:*/*.gno",
    "workspaceContains:*/*/*.gno",
    "onCommand:gno.welcome"
  ],
  "files": [
    "out/**/*",
    "gnopls/gnopls",
    "gnopls/gnopls.exe"
  ],
  "contributes": {
    "languages": [
      {
        "id": "gno",
        "aliases": [
          "Gnolang",
          "gno"
        ],
        "extensions": [
          ".gno"
        ],
        "configuration": "./language-configuration.json",
        "icon": {
          "dark": "media/gno-icon-dark.png",
          "light": "media/gno-icon-light.png"
        }
      },
      {
        "id": "gno.mod",
        "filenames": [
          "gno.mod"
        ],
        "aliases": [
          "Gno Module File"
        ],
        "configuration": "./languages/gno.mod.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "gno",
        "scopeName": "source.gno",
        "path": "./syntaxes/gno.tmLanguage.json"
      },
      {
        "language": "gno.mod",
        "scopeName": "gno.mod",
        "path": "./syntaxes/gno.mod.tmGrammar.json"
      }
    ],
    "snippets": [
      {
        "language": "gno",
        "path": "./snippets/gno.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Gno",
      "properties": {
        "gno.updateGnoplsBinary": {
          "type": "null",
          "markdownDescription": "Click [here](command:gno.updateGnoplsBinary) to update `gnopls`.",
          "scope": "window"
        },
        "gno.transpileOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Transpiles code to Go on file save using 'gno transpile'."
        },
        "gno.formatTool": {
          "type": "string",
          "default": "gofumpt",
          "markdownDescription": "When the language server is enabled and one of `gofmt`/`gofumpt` can be chosen.",
          "scope": "resource",
          "enum": [
            "default",
            "gofmt",
            "gofumpt"
          ],
          "markdownEnumDescriptions": [
            "Format via the gofumpt.",
            "use gofmt to format the file.",
            "Stricter version of gofmt, see https://github.com/mvdan/gofumpt."
          ]
        },
        "gno.useLanguageServer": {
          "type": "boolean",
          "default": true,
          "description": "Use the Gno language server \"gnopls\" for powering language features like code navigation, completion, refactoring, formatting & diagnostics."
        },
        "gno.languageServerExperimentalFeatures": {
          "type": "object",
          "properties": {
            "diagnostics": {
              "type": "boolean",
              "default": true,
              "description": "If true, the language server will provide transpile and build errors."
            }
          },
          "additionalProperties": false,
          "default": {
            "diagnostics": true
          },
          "markdownDescription": "Temporary flag to enable/disable diagnostics from the language server."
        },
        "gno.enableCodeLens": {
          "type": "object",
          "properties": {
            "runtest": {
              "type": "boolean",
              "default": true,
              "description": "If true, enables code lens for running and debugging tests"
            }
          },
          "additionalProperties": false,
          "default": {
            "runtest": true
          },
          "description": "Feature level setting to enable/disable code lens for references and run/debug tests",
          "scope": "resource"
        },
        "gno.makeTx": {
          "type": "object",
          "properties": {
            "broadcast": {
              "type": "boolean",
              "default": true,
              "description": "If true, broadcasts transaction to chain"
            },
            "gasFee": {
              "type": "string",
              "default": "1000000ugnot",
              "description": "Gas fee for transaction"
            },
            "gasWanted": {
              "type": "string",
              "default": "2000000",
              "description": "Gas wanted for transaction"
            }
          },
          "additionalProperties": false,
          "default": {
            "broadcast": true,
            "gasFee": "1000000ugnot",
            "gasWanted": "4000000"
          },
          "description": "",
          "scope": "resource"
        }
      }
    },
    "configurationDefaults": {
      "[gno]": {
        "editor.insertSpaces": false,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "editor.suggest.snippetsPreventQuickSuggestions": false
      }
    },
    "commands": [
      {
        "command": "gno.updateGnoplsBinary",
        "title": "Gno: Update Gnopls Binary",
        "description": "Update the Gno language server binary."
      },
      {
        "command": "gno.runTidy",
        "title": "Gno: Add package to gno.mod",
        "description": "Run gno mod tidy for add pacakge to gno.mod file"
      },
      {
        "command": "gno.findReferences",
        "title": "Gno: Find References",
        "description": "Find all references of the selected symbol in the Gno project."
      },
      {
        "command": "gno.languageserver.restart",
        "title": "Gno: Restart Language Server",
        "description": "Restart the running instance of the language server."
      },
      {
        "command": "gno.format",
        "title": "Gno: Format Document",
        "description": "Use `gofumpt` to format .gno file."
      },
      {
        "command": "gno.transpile",
        "title": "Gno: Transpile",
        "description": "Use `gno transpile` to transpile .gno file with imports."
      },
      {
        "command": "gno.clean",
        "title": "Gno: Clean",
        "description": "Cleans generated Go(*.gno.gen.go) files."
      },
      {
        "command": "gno.test.package",
        "title": "Gno: Test Package",
        "description": "Use `gno test` to test Gno package."
      },
      {
        "command": "gno.test.file",
        "title": "Gno: Test File",
        "description": "Use `gno test` to test *_test.gno file."
      },
      {
        "command": "gno.test.function",
        "title": "Gno: Test Function",
        "description": "Use `gno test` to test a function in *_test.gno file."
      },
      {
        "command": "gno.mod.init",
        "title": "Gno: Mod Init",
        "description": "Creates gno.mod file in root of workspace."
      },
      {
        "command": "gno.maketx.addpkg",
        "title": "Gno: Publish Package (unsafe)",
        "description": "Use `gnokey maketx addpkg` to publish package to chain."
      }
    ],
    "keybindings": [
      {
        "command": "gno.findReferences",
        "key": "shift+alt+f12",
        "when": "editorTextFocus"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "gno.findReferences",
          "when": "editorTextFocus",
          "group": "navigation"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "gnoReferences",
          "title": "Gno References",
          "icon": "media/gno-icon-dark.png"
        }
      ]
    },
    "views": {
      "gnoReferences": [
        {
          "id": "gnoReferencesView",
          "name": "References"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "dayjs": "^1.11.13",
    "tree-kill": "^1.2.2",
    "vscode-languageclient": "8.0.1",
    "vscode-languageserver-protocol": "3.17.5",
    "web-request": "1.0.7"
  },
  "devDependencies": {
    "@types/node": "22.5.5",
    "@types/vscode": "1.93.0",
    "esbuild": "0.23.1",
    "prettier": "3.3.3",
    "typescript": "^5.6.2"
  }
}
